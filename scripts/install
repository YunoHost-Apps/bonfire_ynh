#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_setup_source --dest_dir="$install_dir" --source_id=deps_install

ynh_setup_source --dest_dir="$install_dir"

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"
chmod +x "$install_dir/deps-debian.sh"
ls -la "$install_dir"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_exec_warn_less "HOME=$install_dir $install_dir/deps-debian.sh"

# ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version
# ynh_use_nodejs

#=================================================
# ADD A CONFIGURATION
#=================================================
## Generate secrets and other config values
secret_key_base=$(ynh_string_random --length=50)
signing_salt=$(ynh_string_random --length=50)
encryption_salt=$(ynh_string_random --length=50)
# search
meili_master_key=$(ynh_string_random --length=50)
# max file upload size
MEDIA_UPLOAD_SIZE="${media_upload_size//[!0-9]/}000000"



ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template=".env" --destination="$install_dir/.env"
ynh_store_file_checksum --file="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown $app:$app "$install_dir/.env"

#=================================================
# SPECIFIC SETUP
#=================================================

# load .env into env
export $(grep -v '^#' $install_dir/.env | xargs -d '\n')
# source $install_dir/.env
export WITH_DOCKER=no # or source .env ? # Using this for now
export TERM=linux # why is that not defined ?
export TERMINFO=/etc/terminfo
export PATH="$PATH:$install_dir/.local/share/mise/shims" 

ynh_script_progression --message="Preparing Bonfire release..." --weight=1
cd $install_dir
#ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc "mise plugin add erlang https://github.com/asdf-vm/asdf-erlang.git" # add erlang as source
#ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc "mise install" # install Elixir
# ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc "$ynh_node_load_PATH mix local.hex --force" # install Hex in non-interractive way
### DONT USE GLOBAL NPM INSTALL
# ynh_replace_string --match_string="npm install --global" --replace_string="npm install" --target_file="$install_dir/justfile"

#=================================================
# Building  the release
#=================================================
# ynh_script_progression --message="Building Bonfire release... (this will take a long time)" --weight=1

# ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc "WITH_DOCKER=no $ynh_node_load_PATH just config-basic"
#ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc "WITH_DOCKER=no $ynh_node_load_PATH just mix bonfire.deps.update"
# ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc "WITH_DOCKER=no $ynh_node_load_PATH just rel-build"

#=================================================
# CREATE ADMIN USER
#=================================================
# ynh_script_progression --message="Creating admin user account..." --weight=1

# ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc "$install_dir/bin/bonfire eval 'Bonfire.Me.make_account_and_user(\"$admin\", \"$(ynh_user_get_info --username=\"$admin\" --key=mail)\", \"$password\")'"

#=================================================
# START SYSTEMD SERVICE - Run the release
#=================================================
release_folder=$install_dir

### Not running the migration, they are done on startup anyway
#ynh_script_progression --message="Running database migrations..." --weight=1
## Database created before, let's run the migrations
#ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc  "WITH_DOCKER=no just cmd $release_folder/bin/bonfire eval 'EctoSparkles.Migrator.migrate()'"

#ynh_script_progression --message="Starting Bonfire..." --weight=1
#ynh_exec_warn_less ynh_exec_as $app -s $SHELL -lc  "WITH_DOCKER=no just cmd $release_folder/bin/bonfire start"

ynh_add_nginx_config

mkdir -p "/var/log/$app"
chown -R $app:$app "/var/log/$app"

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

# Create a dedicated systemd config
ynh_add_systemd_config

yunohost service add $app --description="Bonfire daemon" --log="/var/log/$app/$app.log"

ynh_script_progression --message="Starting Bonfire daemon service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log" --line_match="[info] Running Bonfire.Web.Endpoint"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --weight=1
