packaging_format = 2

id = "bonfire"
name = "Bonfire"
description.en = "Federated social networking server built on ActivityPub open protocol"
description.fr = "Serveur de réseautage social fédéré basé sur le protocole ouvert ActivityPub"

version = "0.9.10-169~ynh1"

maintainers = ["Lapineige"]

[upstream]
license = "AGPL-3.0-only"
website = "https://bonfirenetworks.org/"
demo = "https://playground.bonfire.cafe/"
admindoc = "https://bonfirenetworks.org/docs/"
userdoc = "https://bonfirenetworks.org/docs/"
code = "https://github.com/bonfire-networks/bonfire-app"

[integration]
yunohost = ">= 11.1.30"
multi_instance = false
architectures = "all"
ldap = false
sso = false
disk = "2000M"
ram.build = "1500M"
ram.runtime = "500M"

[install]
  [install.domain]
  type = "domain"
  help.en = "The domain name to use. Bonfire will be installed at its root path (/). This can't be changed."
  help.fr = "Nom de domaine à utiliser. Bonfire sera installé à sa racine (/). Cela ne pourra pas être changé."

  [install.is_public]
    type = "boolean"
    default = true
    help.en = "Should that instance be visible to the fediverse ? It is required for federation."
    help.fr = "Cette instance doit elle être visible sur le fédiverse? C'est nécessaire pour la fédération."

  [install.init_main_permission]
    type = "group"
    default = "visitors"

  [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["fr", "en"]
    default = "en"
    
  [install.admin]
    type = "user"
    help.fr = "Choisissez un compte Yunohost. Un compte Bonfire avec les mêmes identifiants (nom, email) sera créé."
    help.en = "Choose a Yunohost account. A Bonfire account with the same credentials (name, email) will be created."

  [install.password]
    help.en = "Choose the password for this account with admin rights."
    help.fr = "Choisissez le mot de passe de ce compte possédant les droits d'administration."
    type = "password"
    
  [install.media_upload_size]
    ask.en = "Choose the maximum size of the media uploaded. Can be changed later."
    ask.fr = "Choisissez la taille maximale des médias mis en ligne. Peut-être modifié ultérieurement."
    type = "select"
    choices = [
      "1MB",
      "2MB",
      "5MB",
      "10MB",
      "15MB",
      "20MB",
      "35MB",
      "50MB",
      "70MB",
      "100MB",
      "150MB"
      ]
    default = "35MB"

[resources]

    [resources.sources]

        [resources.sources.main]
        # TODO: multiple architectures
        url = "https://github.com/bonfire-networks/bonfire-app/releases/download/v0.9.10-beta.169/bonfire-classic-amd64-debian-bullseye.tar.gz"
        sha256 = "d8097e1786da721e05741537169a56e1481b3d08df436af2a99335f935f9798c"

        autoupdate.strategy = "latest_github_release"

        [resources.sources.deps_install]
        url = "https://github.com/bonfire-networks/bonfire-app/raw/v0.9.10-beta.147/deps-debian.sh"
        sha256 = "23aa558f14d7203a491dc721c9c05a35c7ada0321008d9f00b5a6766fe90c24f"
        format = "whatever"
        rename = "deps-debian.sh"
        extract = false
        
    [resources.ports]
    
    [resources.system_user]
    allow_email = true
    
    [resources.install_dir]
    
    [resources.permissions]
    main.url = "/"


    [resources.apt]
    packages = "postgresql, git, tar, unzip curl wget file mailcap bash, ca-certificates, openssh-client, libgcrypt20-dev, libssl-dev, gnupg, tzdata, gettext, imagemagick, libvips-tools, poppler-utils, ffmpegthumbnailer, ffmpeg"

    ##### (this part is optional and corresponds to the legacy ynh_install_extra_app_dependencies helper)
    
    ### Yarn dependency (correct version)
    # extras.yarn.repo = "deb https://dl.yarnpkg.com/debian/ stable main"
    # extras.yarn.key = "https://dl.yarnpkg.com/debian/pubkey.gpg"
    # extras.yarn.packages = ["yarn"]


    ### Elixir 13 dependency - instead of v15 for now
    # extras.elixir13.repo = "deb https://packages.erlang-solutions.com/debian bullseye contrib"
    # extras.elixir13.key = "https://packages.erlang-solutions.com/debian/erlang_solutions.asc"
    # extras.elixir13.packages = ["elixir"]
    ### Elixir 15 dependency
    # Bulleyes comes with v1.10 instead of v1.15 that is required
    # ynh_install_extra_app_dependencies --repo="https://packages.erlang-solutions.com/debian bullseye contrib" --package="elixir-lang" --key='https://packages.erlang-solutions.com/debian/erlang_solutions.asc'
    # v15 is not available in default repo. RabbitMQ repo should be used (https://elixir-lang.org/install.html). No debian simple syntax. TODO later, using the simple syntax for now
    # erlang 26, for elixir v1.15
    #extras.elixir15.repo = "deb https://ppa.launchpadcontent.net/rabbitmq/rabbitmq-erlang/ubuntu jammy main"
    #extras.elixir15.key = "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xb279943d2a549531e144b875f77f1eda57ebb1cc"
    #extras.elixir15.packages = ["elixir"]
    # exlang-dev -> https://github.com/elixir-lang/ex_doc/pull/1442/files # Debian default package is newer (enough), don't use this custom repo
    ### Elixir 15 with mise
    #extras.mise.repo = "deb https://mise.jdx.dev/deb stable main"
    #extras.mise.key = "https://mise.jdx.dev/gpg-key.pub"
    #extras.mise.packages = ["mise"]
    
    ### just dependency
    # TODO : this is unsafe and should be dealt with in a better way.
    # There is currently no proper way to install it simply on Debian 11 https://github.com/casey/just#packages
    # only works for x86, we need to switch to the other option with makedeb package ?
    # extras.just.repo = "deb https://proget.makedeb.org prebuilt-mpr bullseye"
    # extras.just.key = "https://proget.makedeb.org/debian-feeds/prebuilt-mpr.pub"
    # extras.just.packages = ["just"]

    [resources.database]
    type = "postgresql"
